class Solution {
public:

  bool isValid(vector<vector<char>>&board,int row,int col,char ch)
   {
     
     for(int i=0;i<9;i++)
       {
           if(board[i][col]==ch and i!=row) return false;

           if(board[row][i]==ch and i!=col) return false;

           if(board[3*(row/3)+i/3][3*(col/3)+i%3]==ch and (3*(row/3)+i/3)!=row and (3*(col/3)+i%3)!=col ) return false;
       }

       return true;
      
     
      
   }


    bool isValidSudoku(vector<vector<char>>& board) {
        
         int n=board.size();
         int m=board[0].size();

         for(int i=0;i<n;i++)
         {
             for(int j=0;j<m;j++)
             {
                 if(board[i][j]!='.')
                 {
                     if(isValid(board,i,j,board[i][j])==false)
                     {
                         return false;
                     }
                 }
             }
         }

       return true;

    }
};
