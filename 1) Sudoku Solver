TC - O(9^N^2)
SC- O(N^2)


class Solution {
public:

    bool is_valid(vector<vector<char>>&board,int row,int col,char num)
    {
        int n=board.size();
        int m=board[0].size();

        // checking the cols
        for(int i=0;i<n;i++)
        {
            if(board[i][col]==num) return false;
        }
        
        // checking the rows
        for(int j=0;j<m;j++)
        {
            if(board[row][j]==num) return false;
        }


        // check the 3*3 subgrid
        int startrow=row-row%3;
        int startcol=col-col%3;

        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                if(board[i+startrow][j+startcol]==num) return false;
            }
        }
      
      return true;

    }

   bool solver(vector<vector<char>>&board)
   {
       int n=board.size();
       int m=board[0].size();

     for(int i=0;i<n;i++)
     {
         for(int j=0;j<m;j++)
         {
             if(board[i][j]=='.')
             {
                  for(char ch='1';ch<='9';ch++)
                  {
                      if(is_valid(board,i,j,ch))
                      {
                          board[i][j]=ch;

                          if(solver(board))
                          {
                              return true;
                          }
                          else
                          {
                              board[i][j]='.';
                          }
                      }
                  }

                  return false;
             }
         }
     }
      
      return true;

   }


    void solveSudoku(vector<vector<char>>& board) {
        
        solver(board);

    }
};
