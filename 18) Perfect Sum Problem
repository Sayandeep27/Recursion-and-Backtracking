int solve(int arr[], int index, int target, vector<vector<int>>&dp){
        if(index==0){
            if(target==0 && arr[0]==0) return 2;
            else if(target==arr[0] || target==0) return 1;
            else return 0;
        }
        
        if(dp[index][target]!=-1) return dp[index][target];
        
        int exclude = solve(arr, index-1, target, dp);
        int include = 0;
        if(arr[index]<=target){
            include = solve(arr, index-1, target-arr[index], dp);
        }
        
        return dp[index][target] = ((exclude%1000000007)+(include%1000000007))%1000000007;
        
    }
    int perfectSum(int arr[], int n, int sum)
    {
        vector<vector<int>>dp(n+1, vector<int>(sum+1, -1));
        return solve(arr, n-1, sum, dp);
    }
